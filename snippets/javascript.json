{"@class":{"prefix":["doc.class","@class"],"body":["/**"," * @class"," * ${2:description}."," */"],"description":"@class, For Class\n"},"@extends":{"prefix":["doc.extends","@extends"],"body":["/**"," * @extends {${1:SuperClass}}"," */"],"description":"@extends, For Class\n"},"@interface":{"prefix":["doc.interface","@interface"],"body":["/**"," * @interface"," */"],"description":"@interface, For Class\n"},"@implements":{"prefix":["doc.implements","@implements"],"body":["/**"," * @implements {${1:MyInterface}}"," */"],"description":"@implements, For Class\n"},"@constructor":{"prefix":["doc.constructor","@constructor"],"body":"/** @constructor */","description":"@constructor, For Class/Function\n"},"///":{"prefix":["bc","///"],"body":["/**"," * ${0}"," */"],"description":"Block Comments\n"},"@access":{"prefix":["doc.access","@access"],"body":["/**"," * @access ${1:public|protected|package|private}"," */"],"description":"@access, For Common\n"},"@deprecated":{"prefix":["doc.deprecated","@deprecated"],"body":["/**"," * @deprecated ${1:description}"," */"],"description":"@deprecated, For Common\n"},"@experimental":{"prefix":["doc.experimental","@experimental"],"body":["/**"," * @experimental ${1:description}"," */"],"description":"@experimental, For Common\n"},"@example":{"prefix":["doc.example","@example"],"body":["/**"," * @example"," *"," * ```${1:js}"," * ${0}"," * ```"," */"],"description":"@example, For Common\n"},"@example (inner)":{"prefix":["doc.example.inner","@example.inner"],"body":["@example","*","* ```${1:js}","* ${0}","* ```"],"description":"@example, For Common\n"},"@ignore":{"prefix":["doc.ignore","@ignore"],"body":["/**"," * @ignore"," */"],"description":"@ignore, For Common\n"},"@note":{"prefix":["doc.note","@note"],"body":["/**"," * DESIGN NOTES"," *"," */"],"description":"DESIGN NOTES\n"},"@license":{"prefix":["doc.license","@license"],"body":["/**"," * @license"," * Copyright ${1:NAME}. All Rights Reserved."," *"," * Use of this source code is governed by an MIT-style license that can be"," * found in the LICENSE file in the root directory of this source tree."," */"],"description":"@license\n"},"@type":{"prefix":["doc.type","@type"],"body":["/** @type {${1:type}} - ${2:description} */"],"description":"@type, For Member And Variable\n"},"@type is Object":{"prefix":["doc.type.object","@type.object"],"body":["/**"," * @type {Object} ${1:obj}"," * @property {${2:type}} ${1:obj}.${3:property} - ${4:description}"," */"],"description":"@type is Object, For Member And Variable\n"},"@return":{"prefix":["doc.return","@return"],"body":["@return {${1:type}} - ${2:description}"],"description":"@return, For Method And Function\n"},"@requires":{"prefix":["doc.requires","@requires"],"body":["@requires {${1:module}} - ${2:description}"],"description":"@requires, For Method And Function\n"},"@abstract":{"prefix":["doc.abstract","@abstract"],"body":["/**"," * this method must be overridden by sub class."," * @abstract"," */"],"description":"@abstract, For Method And Function\n"},"@emits":{"prefix":["doc.emits","@emits"],"body":["/**"," * @emits {${1:MyEvent}} ${2:emit event when ...}"," */"],"description":"@emits, For Method And Function\n"},"@listens":{"prefix":["doc.listens","@listens"],"body":["/**"," * @listens {${1:MyEvent}} ${2:listen event because ...}"," */"],"description":"@listens, For Method And Function\n"},"@override":{"prefix":["doc.override","@override"],"body":["/**"," * @override"," */"],"description":"@override, For Method And Function\n"},"@param":{"prefix":["doc.param","@param"],"body":["/**"," * @param {${1:type}} ${2:property} - ${3:description}."," */"],"description":"@param, For Method;\n- Nullable: `@param {?number} param`, \n- Not Nullable: `@param {!Object} param`\n- Union: `@param {number|string} param`\n- Nullable and Union: `@param {?(number|string)} param`\n- Spread: `@param {...number} param`\n- Optional: `@param {number} [param]`\n- Default: `@param {number} [param=10]`\n- Function: `@param {function(foo: number, bar: string): boolean} param`\n- Generics: `@param {Map<number, string>} param`\n- Record: `@param {{foo: ?number, bar: string}} param`\n"},"@param (inner)":{"prefix":["doc.param.inner","@param.inner"],"body":"@param {${1:type}} ${2:property} - ${3:description}.","description":"@param, For Method;\n- Nullable: `@param {?number} param`, \n- Not Nullable: `@param {!Object} param`\n- Union: `@param {number|string} param`\n- Nullable and Union: `@param {?(number|string)} param`\n- Spread: `@param {...number} param`\n- Optional: `@param {number} [param]`\n- Default: `@param {number} [param=10]`\n- Function: `@param {function(foo: number, bar: string): boolean} param`\n- Generics: `@param {Map<number, string>} param`\n- Record: `@param {{foo: ?number, bar: string}} param`\n"},"@param is Object":{"prefix":["doc.param.object","@param.object"],"body":["/**"," * @param {Object} ${1:param} - ${2:description}."," * @param {${3:type}} ${1:param}.${4:property} - ${5:property description}."," */"],"description":"@param is Object, For Method\n"},"@param is Object (inner)":{"prefix":["doc.param.object.inner","@param.object.inner"],"body":["@param {Object} ${1:param} - ${2:description}.","* @param {${3:type}} ${1:param}.${4:property} - ${5:property description}."],"description":"@param is Object (inner), For Method\n"},"@throws":{"prefix":["doc.throws","@throws"],"body":["/**"," * @throws {${1:MyError}} ${2:throw error when ...}"," */"],"description":"@throws, For Method And Function\n"},"@external":{"prefix":["doc.external","@external"],"body":["/**"," * @external {${1:identifier}} ${2:URL}"," */"],"description":"@external, For Virtual\n"},"@typedef":{"prefix":["doc.typedef","@typedef"],"body":["/**"," * @typedef {${1:type}} ${1:name}"," */"],"description":"@typedef, For Virtual\n"},"@typedef is Object":{"prefix":["doc.typedef.object","@typedef.object"],"body":["/**"," * @typedef {Object} ${1:name}"," * @property {${2:type}} ${3:description}."," */"],"description":"@typedef is Object, For Virtual\n"}}